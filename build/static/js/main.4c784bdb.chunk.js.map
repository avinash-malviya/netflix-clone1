{"version":3,"sources":["requests.js","axios.js","Row.js","Banner.js","Nav.js","App.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c784bdb.chunk.js","sourcesContent":["const API_KEY = \"59ad948f2f06d28e092924a88e508552\";\n\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n};\n\nexport default requests;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n\n  // instance.get('/foo-bar') means https://themoviedb.org/3/foo-bar\n});\nexport default instance;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\nimport Youtube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      // https://themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_networks=213\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  //console.log(movies);\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  const handleClick = (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      movieTrailer(movie?.name || \"\")\n        .then((url) => {\n          //https://www.youtube.com/watch%20?v=XtMThy8QKqU\n          const urlParams = new URLSearchParams(new URL(url).search);\n          setTrailerUrl(urlParams.get(\"v\"));\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <h1>{title}</h1>\n\n      <div className=\"row_posters\">\n        {movies.map((movie) => {\n          return (\n            <img\n              onClick={() => handleClick(movie)}\n              key={movie.id}\n              className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n              src={`${base_url}${\n                isLargeRow ? movie.poster_path : movie.backdrop_path\n              }`}\n              alt={movie.name}\n            />\n          );\n        })}\n      </div>\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\n    </div>\n  );\n}\n\nexport default Row;\n","import axios from \"./axios\";\nimport React, { useState, useEffect } from \"react\";\nimport requests from \"./requests\";\nimport \"./Banner.css\";\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n      return request;\n    }\n    fetchData();\n  }, []);\n\n  function truncate(str, n) {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n\n  console.log(movie);\n  return (\n    <header\n      className=\"banner\"\n      style={{\n          backgroundSize: \"cover\",\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n        backgroundPosition: \"center center\",\n      }}\n    >\n      <div className=\"banner_contents\">\n        <h1 className=\"banner_title\">\n          {movie?.title || movie?.name || movie?.original_name}\n        </h1>\n        <div className=\"banner_buttons\">\n          <button className=\"banner_button\">Play</button>\n          <button className=\"banner_button\">Next</button>\n        </div>\n        <h1 className=\"banner_description\">\n          {\" \"}\n          {truncate(movie?.overview, 150)}\n        </h1>\n      </div>\n      <div className=\"banner--fadeBottom\"></div>\n    </header>\n  );\n}\nexport default Banner;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Nav.css\";\n\nfunction Nav() {\n  const [show, handleShow] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 100) {\n        handleShow(true);\n      } else handleShow(false);\n    });\n    return () => {\n      window.removeEventListener(\"scroll\");\n    };\n  }, []);\n  return (\n    <div className={`nav ${show && \"nav_black\"}`}>\n      <img\n        className=\"nav_logo\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg?download\"\n        alt=\"Netflix Logo\"\n      />\n\n      <img\n        className=\"nav_avatar\"\n        src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\n        alt=\"Netflix Logo\"\n      />\n    </div>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./App.css\";\nimport requests from \"./requests\";\nimport Row from \"./Row\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"TopRated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"ActionMovies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"ComedyMovies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"HorrorMovies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"RomanceMovies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}